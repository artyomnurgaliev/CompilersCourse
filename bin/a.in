class Factorial {
  public static void main () {
    int num;
    num = 2;
    assert(num > 1);
    System.out.println(num);
    Fac fac;
    fac = new Fac();
    int[] a;
    a = new int[56];
    System.out.println(a.length);
    System.out.println(fac.ComputeFac(10));
    System.out.println((new Fac().ComputeFac(9) * 10) == fac.ComputeFac(10));
    System.out.println(fac.GetA());
    fac.B(num, 3);
    a[0] = 5;
    System.out.println(a[0]);
    Fac[] fac2;
    fac2 = new Fac[3];
    (fac2[0]).SetA(a[0]);
    System.out.println(fac2[0].GetA());
    {
        int a;
        a = 6;
        System.out.println(a);
        System.out.println(fac2.length);
    }

    C c;
    c = new C();
    c.SetF(fac);
    System.out.println(c.Is_f_b_length_more_then_147());
  }
}

class Fac {
  int a;
  int[] b;
  public void SetA(int value) {
    a = value;
  }

  public int ComputeFac (int num) {
    a = 123;
    int num_aux;
    if (num == 0)
      num_aux = 1;
    else
      num_aux = num * this.ComputeFac (num - 1);
    return num_aux;
  }
  public int GetA() {
    b = new int[148];
    return a;
  }
  public int[] GetB() {
    return b;
  }
  public void B(int a, int c) {
    System.out.println(a);
    System.out.println(c);
    System.out.println(b.length);
  }
}

class C{
    Fac f_;
    public void SetF(Fac f) {
       f_ = f;
    }
    public boolean Is_f_b_length_more_then_147() {
        return ((f_.GetB()).length > 147);
    }
}